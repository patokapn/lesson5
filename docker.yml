- hosts: all
  become: true
  become_user: root
  tasks:
    - name: Update apt repo and cache
      apt: update_cache=yes force_apt_get=yes

    - name: Install packages for Docker
      apt:
        name: "{{ packages }}"
        state: present
        force_apt_get: "yes"
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip

    - name: Upgrade all apt packages
      apt: upgrade=dist force_apt_get=yes

    - name: Add GPG key for the official Docker repository
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add the Docker repository to APT sources
      apt_repository: repo='deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable'
        state=present

    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes

    - name: ensure docker and dependencies are installed
      apt: name=docker-ce update_cache=yes
    - service: name=docker 
        state=restarted

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Adding user ansible to docker group  
      user:
        name: "ansible"
        groups: "docker"
        append: "yes"

    - name: Start NodeJS
      docker_container:
        name: webnodejs
        image: pavelpasha/lesson5
        pull: true
        ports:
          - "9090:9090"
        state: started

    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no

    - name: Reboot the Debian or Ubuntu server
      reboot:
        msg: "Reboot initiated by Ansible due to kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists
